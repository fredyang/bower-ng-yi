{"version":3,"sources":["yi.min.js"],"names":["angular","yiModule","module","directive","resource","yiDataAttribute","scope","element","attrs","updateAttribute","attrName","localizedAttributes","resourceKey","resourceValue","get","data","attr","$eval","yiAttr","forEach","$attr","normalizedAttr","match","exec","key","$observe","newVal","oldVal","onChanged","resDataAttribute","updatHtml","html","yi","filter","resFilter","$stateful","factory","$http","$rootScope","userLanguage","evalObjectPath","object","path","regDot","test","parts","split","node","i","length","value","undefined","supplant","string","obj","replace","rSupplant","a","b","r","resourceCache","$watch","lang","then","response","$broadcast","rtn","changedEvent","resourceId","isFunction","text","isUndefined","Error","evaluateImmediately","fn","$on","$window","yiConfig","$cookieStore","arguments","cachedLanguage","supportedLanguages","getDefaultLanguage","put","cookieName","defaultLanguage","browserLanguage","navigator","language","substr","en"],"mappings":"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","file":"yi.min.js","sourcesContent":["/**\n * @license ng-yi v0.9\n * (c) 2015 Fred Yang http://semanticsworks.com\n * License: MIT\n */\n(function (angular) {\n\n'use strict';\n\nvar yiModule = angular.module('ng-yi', ['ngCookies']);\n\n\n\n'use strict';\n\n//yi-attr=\"{ placeholder : 'username'}\"\nyiModule.directive('yiAttr', function (resource) {\n\n  var yiDataAttribute = /^yi-data-(.*)/;\n\n  return function (scope, element, attrs) {\n\n    var data;\n\n    var localizedAttributes = scope.$eval(attrs.yiAttr);\n\n\n    angular.forEach(attrs.$attr, function (attr, normalizedAttr) {\n\n      var match = yiDataAttribute.exec(attr);\n      if (match) {\n        data = data || {};\n        var key = match[1];\n        attrs.$observe(normalizedAttr, function (newVal, oldVal) {\n          if ((newVal && newVal !== oldVal) || !(data && data[key])) {\n            data[key] = attrs[normalizedAttr];\n            updateAttribute();\n          }\n        });\n      }\n    });\n\n    function updateAttribute() {\n      for (var attrName in localizedAttributes) {\n        var resourceKey = localizedAttributes[attrName];\n        var resourceValue = resource.get(resourceKey, data);\n        element.attr(attrName, resourceValue);\n      }\n    }\n\n\n    resource.onChanged(!data, updateAttribute, scope);\n  };\n});\n\n'use strict';\n\nyiModule.directive('yi', function (resource) {\n\n  var resDataAttribute = /^yi-data-(.*)/;\n\n  return function (scope, element, attrs) {\n\n    var data;\n\n    //search for attributes yi-data-fullname, in\n    //<span res=\"greeting\" yi-data-fullname=\"{{fullname}}\"></span>\n    //to create a data object like { fullname: value_of_fullname }\n    //\n    //if greeting is \"My name is {fullname}\" and fullname is \"Fred\"\n    //then output will name \"My name is Fred\n    angular.forEach(attrs.$attr, function (attr, normalizedAttr) {\n\n      var match = resDataAttribute.exec(attr);\n      if (match) {\n        data = data || {};\n        var key = match[1];\n        attrs.$observe(normalizedAttr, function (newVal, oldVal) {\n          if ((newVal && newVal !== oldVal) || !(data && data[key])) {\n            data[key] = attrs[normalizedAttr];\n            updatHtml();\n          }\n        });\n      }\n    });\n\n    function updatHtml() {\n\n      element.html(resource.get(attrs.yi, data));\n    }\n\n    //if data is not empty, delay a little\n    //so that let attrs.$observe to do the update\n    resource.onChanged(!data, updatHtml, scope);\n  };\n});\n\n'use strict';\n\nyiModule.filter('yi', function (resource) {\n  //support\n  // 'key' | yi;\n  function resFilter(resourceKey) {\n    return resource.get(resourceKey);\n  };\n\n  resFilter.$stateful = true;\n\n  return resFilter;\n\n});\n\n'use strict';\n\n\nyiModule.factory('resource', function ($http, $rootScope, userLanguage) {\n\n  var resourceCache;\n\n  var regDot = /\\./;\n\n  function evalObjectPath(object, path) {\n\n    path = path + '';\n\n    if (!regDot.test(path)) {\n      return object[path];\n    }\n\n    var parts = path.split('.');\n    var node = object;\n    //\n    for (var i = 0; i < parts.length; i++) {\n      var value = node[parts[i]];\n      if (value === undefined) {\n        return undefined;\n      } else {\n        node = value;\n      }\n    }\n    return node;\n  };\n\n\n  var rSupplant = /\\{([^\\{\\}]*)\\}/g;\n\n  function supplant(string, obj) {\n    return string.replace(rSupplant,\n      function (a, b) {\n        var r = obj[b];\n        return typeof r ? r : a;\n      });\n  }\n\n\n  $rootScope.$watch(function () {\n    return userLanguage();\n  }, function (lang) {\n    resourceCache = $http.get('resource/' + lang + '.json').then(function (response) {\n      resourceCache = response.data;\n      $rootScope.$broadcast(rtn.changedEvent);\n      return resourceCache;\n    });\n  });\n\n  var rtn = {\n\n    changedEvent: 'resourceChanged',\n\n    //resource.get('greeting', {fullName: \"John Doe\" });\n    //data is optional\n    //if 'greeting' resource is \"hello, {fullName}\", then it will\n    //return \"hello, John Doe\"\n    get: function (resourceId, data) {\n\n      if (!resourceCache || (!!resourceCache && angular.isFunction(resourceCache.then))) {\n        return '';\n      } else {\n        var text = evalObjectPath(resourceCache, resourceId);\n        if (data) {\n          text = supplant(text, data);\n        }\n        if (angular.isUndefined(text)) {\n          throw new Error('resource for ' + resourceId + ' does not exists');\n        }\n        return text;\n      }\n    },\n\n    //support\n    //onChanged(fn, scope) //evaluateImmediately is true by default\n    //onChanged(evaluateImmediately, fn, scope)\n    onChanged: function (evaluateImmediately, fn, scope) {\n\n      if (angular.isFunction(evaluateImmediately)) {\n        scope = fn;\n        fn = evaluateImmediately;\n        evaluateImmediately = true;\n      }\n\n      if (evaluateImmediately) {\n        fn();\n      }\n\n      scope.$on(rtn.changedEvent, fn);\n    }\n  };\n\n  return rtn;\n\n});\n\n'use strict';\n\nyiModule.factory('userLanguage', function ($window, yiConfig, $cookieStore) {\n\n\n  var cookieName = yiConfig.cookieName;\n  var cachedLanguage = $cookieStore.get(cookieName);\n\n  if (!cachedLanguage) {\n    userLanguage(getDefaultLanguage());\n  }\n\n  return userLanguage;\n\n  function userLanguage(lang) {\n\n    if (arguments.length === 0) {\n      return cachedLanguage;\n    } else {\n\n      if (!(lang in yiConfig.supportedLanguages)) {\n        lang = getDefaultLanguage();\n      }\n      cachedLanguage = lang;\n      $cookieStore.put(cookieName, lang);\n    }\n  }\n\n  function getDefaultLanguage() {\n    //$window.navigator.language is supported by Chrome and Firefox like 'en-US'\n    //$window.navigator.browserLanguage is supported by IE\n    var browserLanguage = ($window.navigator.language || $window.navigator.browserLanguage).substr(0, 2);\n    var defaultLanguage;\n\n\n    //if browser language is not supported, then use the\n    //default supported language as default language\n    //\n    if (!(browserLanguage in yiConfig.supportedLanguages)) {\n      defaultLanguage = yiConfig.defaultLanguage;\n    } else {\n      defaultLanguage = browserLanguage;\n    }\n    return defaultLanguage\n  }\n\n});\n\nyiModule.value('yiConfig', {\n    supportedLanguages: {\n        en: 'English'\n    },\n    defaultLanguage: 'en',\n    cookieName: 'language'\n});\n\n})(angular);\n"],"sourceRoot":"/source/"}